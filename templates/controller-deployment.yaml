apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "boundary.fullname" . }}-controller
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "boundary.labels" . | nindent 4 }}
    app.kubernetes.io/component: boundary-controller
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "boundary.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: boundary-controller
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if and .Values.vault.enabled .Values.vault.database.enabled }}
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-status: "update"
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/agent-pre-populate: "true"
        {{- with .Values.vault.database }}
        vault.hashicorp.com/role: {{ .role | quote }}
        vault.hashicorp.com/agent-inject-secret-database-creds-admin.txt: {{ .vaultAdminCredPath | quote }}
        vault.hashicorp.com/agent-inject-template-database-creds-admin.txt: |
          {{`{{- with secret `}}{{ .vaultAdminCredPath | quote }}{{` -}}`}}
          {{`postgresql://{{ .Data.username }}:{{ .Data.password }}`}}@{{ $.Values.database.address }}:{{ default "5432" $.Values.database.port }}/{{ default "boundary" $.Values.database.name }}{{- if ne $.Values.database.ssl true }}?sslmode=disable{{- end }}
          {{`{{- end }}`}}
        vault.hashicorp.com/agent-inject-secret-database-creds.txt: {{ .vaultCredPath | quote }}
        vault.hashicorp.com/agent-inject-template-database-creds.txt: |
          {{`{{- with secret `}}{{ .vaultCredPath | quote }}{{` -}}`}}
          {{`postgresql://{{ .Data.username }}:{{ .Data.password }}`}}@{{ $.Values.database.address }}:{{ default "5432" $.Values.database.port }}/{{ default "boundary" $.Values.database.name }}{{- if ne $.Values.database.ssl true }}?sslmode=disable{{- end }}
          {{`{{- end }}`}}
        {{- end }}
      {{- end }}
      labels:
        {{- include "boundary.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: boundary-controller
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "boundary.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag}}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - "-c"
          args:
           - boundary database migrate -config /boundary/boundary-config-admin.hcl || boundary database init -skip-auth-method-creation -skip-host-resources-creation -skip-scopes-creation -config /boundary/boundary-config-admin.hcl || sleep 10000
          env:
            - name: HOSTNAME
              value: boundary
            {{- range .Values.podSecrets }}
            - name: {{ .keyName }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .keyName }}
            {{- end }}
          volumeMounts:
            - name: boundary-config
              mountPath: /boundary
              readOnly: true
      containers:
        - name: {{ .Chart.Name }}-controller
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - "-c"
          args:
           - boundary server -config /boundary/boundary-config.hcl
          env:
            - name: HOSTNAME
              value: boundary
            {{- range .Values.podSecrets }}
            - name: {{ .keyName }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .keyName }}
            {{- end }}
          volumeMounts:
            - name: boundary-config
              mountPath: /boundary
              readOnly: true
          ports:
            - name: api
              containerPort: 9200
              protocol: TCP
            - name: cluster
              containerPort: 9201
              protocol: TCP
            - name: ops
              containerPort: 9203
          livenessProbe:
            httpGet:
              path: /health
              port: ops
          readinessProbe:
            httpGet:
              path: /health
              port: ops
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: boundary-config
          configMap:
            name: {{ include "boundary.fullname" . }}-controller-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
