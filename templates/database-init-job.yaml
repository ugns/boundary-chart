{{- if .Values.controller.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "boundary.fullname" . }}-init
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "boundary.labels" . | nindent 4 }}
    app.kubernetes.io/component: boundary-init
  annotations:
  {{- with .Values.serviceAccount.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
    helm.sh/hook: pre-install,pre-upgrade,pre-rollback
    helm.sh/hook-weight: "0"
spec:
  template:
    metadata:
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.vault.enabled  }}
        {{- include "vault-agent.annotations" . | nindent 8 }}
        {{- if .Values.vault.database.enabled }}
        {{- include "vault-agent.template.annotations.database-creds" (dict "VaultPath" .Values.vault.database.vaultAdminCredPath "globalContext" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      labels:
        {{- include "boundary.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: boundary-init
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "boundary.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      restartPolicy: OnFailure
      initContainers:
        - name: {{ .Chart.Name }}-add-kubectl-tool
          image: bitnami/kubectl:{{ .Capabilities.KubeVersion.Major }}.{{ .Capabilities.KubeVersion.Minor }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              echo "Copying tools:"
              /bin/cp -pv /opt/bitnami/kubectl/bin/kubectl /tools/
          volumeMounts:
            - mountPath: /tools
              name: tools
      containers:
        - name: {{ .Chart.Name }}-init
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag}}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              /tools/kubectl scale --replicas=0 deployment/{{ include "boundary.fullname" . }}-controller || true
              echo "Waiting for pods of '{{ include "boundary.fullname" . }}-controller' deployment to stopped"
              /tools/kubectl wait --for=delete pod -l app.kubernetes.io/component={{ include "boundary.fullname" . }}-controller --timeout=300s || true
              {{- if .Values.vault.enabled }}
              export VAULT_TOKEN=$(cat /vault/secrets/token)
              {{- end }}
              echo "Migrating database..."
              boundary database migrate -config /boundary/controller-config.hcl || boundary database init {{ include "boundary.database.init" . | trim }} -config /boundary/controller-config.hcl || sleep infinity
              {{- $replicas := default .Values.global.replicaCount .Values.controller.replicaCount }}
              {{- if .Values.controller.autoscaling.enabled }}
              {{- $replicas = default .Values.controller.autoscaling.minReplicas }}
              {{- end }}
              /tools/kubectl scale --replicas={{ $replicas }} deployment/{{ include "boundary.fullname" . }}-controller || true
          env:
            - name: HOSTNAME
              value: boundary
            {{- range .Values.podSecrets }}
            - name: {{ .keyName }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretName }}
                  key: {{ .keyName }}
            {{- end }}
          volumeMounts:
            - name: boundary-config
              mountPath: /boundary
              readOnly: true
            - mountPath: /tools
              name: tools
            {{- if and .Values.vault.tls .Values.vault.tls.secretName }}
            - mountPath: /vault/tls
              name: vault-tls
              readOnly: true
            {{- end }}
      volumes:
        - name: boundary-config
          configMap:
            name: {{ include "boundary.fullname" . }}-controller-config
        - name: tools
          emptyDir: {}
        {{- if and .Values.vault.tls .Values.vault.tls.secretName }}
        - name: vault-tls
          secret:
            defaultMode: 420
            secretName: {{ .Values.vault.tls.secretName }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end -}}
