name: chart-docs
on:
  pull_request_target:
    types: [opened, synchronize]

jobs:
  chart-docs:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: write

    steps:
    - name: Generate token
      id: generate_token
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.GH_APP_ID }}
        private_key: ${{ secrets.GH_PRIVATE_KEY }}
        installation_id: ${{ secrets.GH_INSTALLATION_ID }}

    # Checkout the pull request branch
    #  "An action in a workflow run can’t trigger a new workflow run. For example, if an action pushes code using
    #   the repository’s GITHUB_TOKEN, a new workflow will not run even when the repository contains
    #   a workflow configured to run when push events occur."
    # However, using a personal access token will cause events to be triggered.
    # We need that to ensure a status gets posted after the auto-format commit.
    # We also want to trigger tests if the auto-format made no changes.
    - uses: actions/checkout@v3
      if: github.event.pull_request.state == 'open'
      name: Privileged Checkout
      with:
        token: ${{ steps.generate_token.outputs.token }}
        repository: ${{ github.event.pull_request.head.repo.full_name }}
        # Check out the PR commit, not the merge commit
        # Use `ref` instead of `sha` to enable pushing back to `ref`
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Install helm-docs
      run: |
        cd /tmp
        wget https://github.com/norwoodj/helm-docs/releases/download/v${{env.HELM_DOCS_VERSION}}/helm-docs_${{env.HELM_DOCS_VERSION}}_Linux_x86_64.tar.gz
        tar -xvf helm-docs_${{env.HELM_DOCS_VERSION}}_Linux_x86_64.tar.gz
        sudo mv helm-docs /usr/local/sbin
      env:
        HELM_DOCS_VERSION: "1.10.0"

    - name: Run helm-docs
      run: |
        helm-docs -t README.md.gotmpl -o README.md

    - name: Commit changes to the PR branch
      if: github.event.pull_request.state == 'open'
      shell: bash
      id: commit
      env:
        SENDER: ${{ github.event.sender.login }}
      run: |
        set -x
        output=$(git diff --name-only)
        if [ -n "$output" ]; then
          echo "Changes detected. Pushing to the PR branch"
          git config --global user.name 'undergridbot'
          git config --global user.email '97003863+undergridbot@users.noreply.github.com'
          git add -A
          git commit -m "Auto Format"
          # Prevent looping by not pushing changes in response to changes from undergridbot
          [[ $SENDER ==  "undergridbot" ]] || git push
          # Set status to fail, because the push should trigger another status check,
          # and we use success to indicate the checks are finished.
          printf "::set-output name=%s::%s\n" "changed" "true"
          exit 1
        else
          printf "::set-output name=%s::%s\n" "changed" "false"
          echo "No changes detected"
        fi